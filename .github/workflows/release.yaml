name: Release

on:
  push:
    branches: [ main ]
jobs:
  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - id: pr
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - id: type
        shell: bash
        run: |
          if [[ "${{ steps.pr.outputs.labels }}" =~ "major" ]]; then
            echo "::set-output name=pr-type::major"
            exit 0
          elif [[ "${{ steps.pr.outputs.labels }}" =~ "minor" ]]; then
            echo "::set-output name=pr-type::minor"
            exit 0
          elif [[ "${{ steps.pr.outputs.labels }}" =~ "patch" ]]; then
            echo "::set-output name=pr-type::patch"
            exit 0
          fi
          echo "Failed: No supported label found in '${{ steps.pr.outputs.labels }}'." 
          exit 1

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.type.outputs.pr-type }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION})"

  build:
    needs: [ "generate-version" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - run: mvn versions:set -DnewVersion=${{ needs.generate-version.outputs.version }}

  git-release:
    needs: [ "generate-version", "build"]

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          prerelease: false
          title: ${{ needs.generate-version.outputs.version }}
